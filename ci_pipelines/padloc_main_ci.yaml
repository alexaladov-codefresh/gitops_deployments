version: "1.0"
stages:
  - "clone"
  - "test"
  - "build"
  - "deploy-test"
  - "approve"
  - "deploy-prod"

steps:
  clone:
    title: "Cloning repository"
    type: "git-clone"
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    git: github-codefresh-personal
    stage: "clone"


  prepare_tests:
    title: "Prepare dependancies"
    image: "node:16.13.1"
    working_directory: "${{clone}}"
    commands:
      - npm ci
    stage: "test"
    
  test_section:
    stage: "test"
    image: "node:16.13.1"
    working_directory: "${{clone}}"
    scale:
      test_prettier_check:
        title: "Perform prettier check"
        commands:
          - npm run prettier:check
      test_pwa_check:
        title: "Perform pwa check"
        commands:
          - npm run pwa:build
      test_webext_check:
        title: "Perform web-extension check"
        commands:
          - npm run web-extension:build
      test_srv_dryrun_check:
        title: "Perform server dry run check"
        commands:
          - npm run server:start-dry
      test_main_check:
        title: "Perform tests"
        commands:
          - npm run test


  build_section:
    stage: "build"
    working_directory: "${{clone}}"
    type: "build"
    tag: "build-cache"
    buildkit: true
    tags: 
      - '${{CF_BRANCH}}-${{CF_SHORT_REVISION}}'
    metadata: 
      set: 
        - qa: passed
        - commit_message: ${{CF_COMMIT_MESSAGE}}
    scale:
      build_server:
        title: "Building Server image"
        image_name: "alexaladovcodefresh/padloc-server"
        dockerfile: "Dockerfile-server"
      build_pwa:
        title: "Building PWA image"
        image_name: "alexaladovcodefresh/padloc-pwa"
        dockerfile: "Dockerfile-pwa"

  
  test_argo_app_source_clone:
    stage: "deploy-test"
    title: "Cloning source"
    type: "git-clone"
    repo: "https://github.com/alexaladov-codefresh/padloc-gitops-source.git"
    revision: "main"
    git: github-codefresh-personal

  test_modify_image:
    stage: "deploy-test"
    image: mikefarah/yq:4.40.4
    working_directory: "${{test_argo_app_source_clone}}"
    commands:
      - yq eval '.spec.source.helm.parameters |= map(select(.name == "server.image").value |= "alexaladovcodefresh/padloc-server:${{CF_BRANCH}}-${{CF_SHORT_REVISION}}")' padloc-local-test-p520.yaml -i
      - yq eval '.spec.source.helm.parameters |= map(select(.name == "pwa.image").value |= "alexaladovcodefresh/padloc-pwa:${{CF_BRANCH}}-${{CF_SHORT_REVISION}}")' padloc-local-test-p520.yaml -i
      - cat padloc-local-test-p520.yaml

  commit_and_push_test:
    stage: "deploy-test"
    title: Commit app changes and push
    type: git-commit
    arguments:
      repo: "alexaladov-codefresh/padloc-gitops-source"
      git: github-codefresh-personal
      working_directory: '/codefresh/volume/padloc-gitops-source'
      commit_message: update images with tag ${{CF_SHORT_REVISION}}
      git_user_name: git-user-name
      git_user_email: git-user@email.com
      allow_empty: true
      
#   link_to_the_app:
#     stage: "deploy-test"
#     title: Link to the application ingress
#     working_directory: "${{test_argo_app_source_clone}}"
#     image: mikefarah/yq:4.40.4
#     commands:
#       - export INGRESS_LINK=$(yq '.spec.source.helm.parameters.[] | select(.name == "ingress.host").value' padloc-local-test-p520.yaml) 
#       - cf_export link_to_the_app_CF_OUTPUT_URL="${INGRESS_LINK}"

    
  approval:
      type: pending-approval
      stage: "approve"
      description: Approve
      title: Update prod with the new image?
#       fail_fast: true
#       strict_fail_fast: true
      arguments:
        timeout:
          duration: 100
          finalState: denied
    
  prod_argo_app_source_clone:
    stage: "deploy-prod"
    title: "Cloning source"
    type: "git-clone"
    repo: "https://github.com/alexaladov-codefresh/padloc-gitops-source-prod.git"
    revision: "main"
    git: github-codefresh-personal
    
  prod_modify_image:
    stage: "deploy-prod"
    image: mikefarah/yq:4.40.4
    working_directory: "${{prod_argo_app_source_clone}}"
    commands:
      - yq eval '.spec.source.helm.parameters |= map(select(.name == "server.image").value |= "alexaladovcodefresh/padloc-server:${{CF_BRANCH}}-${{CF_SHORT_REVISION}}")' padloc-test-prod.yaml -i
      - yq eval '.spec.source.helm.parameters |= map(select(.name == "pwa.image").value |= "alexaladovcodefresh/padloc-pwa:${{CF_BRANCH}}-${{CF_SHORT_REVISION}}")' padloc-test-prod.yaml -i
      - cat padloc-test-prod.yaml
      
  commit_and_push_prod:
    stage: "deploy-prod"
    title: Commit app changes and push
    type: git-commit
    arguments:
      repo: "alexaladov-codefresh/padloc-gitops-source-prod"
      git: github-codefresh-personal
      working_directory: '/codefresh/volume/padloc-gitops-source-prod'
      commit_message: update images with tag ${{CF_SHORT_REVISION}}
      git_user_name: git-user-name
      git_user_email: git-user@email.com
      allow_empty: true
      
  link_to_prod_app:
    stage: "deploy-prod"
    title: Link to the application ingress
    working_directory: "${{prod_argo_app_source_clone}}"
    image: mikefarah/yq:4.40.4
    commands:
      - export INGRESS_LINK=$(yq '.spec.source.helm.parameters.[] | select(.name == "ingress.host").value' padloc-test-prod.yaml) 
      - cf_export link_to_prod_app_CF_OUTPUT_URL="https://${INGRESS_LINK}"


    
    



